@model ProductoNegocioViewModel
@{
    ViewData["Title"] = "Agregar Producto a la carta";
}

<div class="container">
    <h1>Negocio @Model.Negocio.Nombre </h1>

    <!-- Formulario para agregar nuevo producto -->
    <h2>Agregar Nuevo Producto</h2>
    <form method="post" asp-controller="Producto" asp-action="AgregarProducto">
        <div class="form-group">
            <label for="nombreNuevo">Nombre del Producto:</label>
            <input type="text" class="form-control" id="nombreNuevo" name="Nombre_Producto" required>
        </div>
        <div class="form-group">
            <label for="categoriaNueva">Categoría del Producto:</label>
            <select class="form-control" id="categoriaNueva" name="Categoria_Producto.Id" required>
                @foreach (var categoria in Model.CategoriaProducto)
                {
                    <option value="@categoria.Id">@categoria.NombreCategoria</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="descripcionNueva">Descripción:</label>
            <textarea class="form-control" id="descripcionNueva" name="Descripcion"></textarea>
        </div>
        <div class="form-group">
            <label for="stockDisponibleNuevo">Stock Disponible:</label>
            <input type="number" class="form-control" id="stockDisponibleNuevo" name="Stock_Disponible" required>
        </div>
        <div class="form-group">
            <label for="precioNuevo">Precio:</label>
            <input type="text" class="form-control" id="precioNuevo" name="Precio" required>
        </div>
        <div class="form-group">
            <label for="imagenNueva">URL de la imagen:</label>
            <input type="text" class="form-control" id="imagenNueva" name="ImagenURL" required>
        </div>
        <input type="hidden" id="negocioId" name="Negocio.Id" value="@Model.Negocio.Id">
        <button type="submit" class="btn btn-success">Agregar Nuevo Producto</button>
    </form>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        jQuery(document).ready(function () {
            // Limpiar el campo de precio y limitar a dos decimales
            $('#precioNuevo').on('input', function () {
                var value = $(this).val().trim();

                // Eliminar caracteres que no sean números ni el punto decimal
                var cleanedValue = value.replace(/[^\d.]/g, '');

                // Reemplazar múltiples puntos decimales con solo uno
                cleanedValue = cleanedValue.replace(/(\..*)\./g, '$1');

                // Limitar a dos decimales
                var decimalCount = (cleanedValue.split('.')[1] || '').length;
                if (decimalCount > 2) {
                    cleanedValue = cleanedValue.split('.')[0] + '.' + cleanedValue.split('.')[1].substring(0, 2);
                }

                // Asigna el valor limpiado de nuevo al campo
                $(this).val(cleanedValue);
            });

            // Validar el formulario antes de enviar
            $('form').on('submit', function () {
                var value = $('#precioNuevo').val().trim();

                // Validar que el valor sea un número válido
                if (!/^\d+(\.\d{1,2})?$/.test(value)) {
                    // Mostrar mensaje de error o tomar alguna acción apropiada
                    alert('Por favor, ingrese un número válido para el precio (hasta dos decimales).');
                    return false; // Evitar que el formulario se envíe
                }

                // Si la validación es exitosa, permite enviar el formulario
                return true;
            });
        });
    </script>
}
